#include <stdio.h>
#define INF 9999
#define MAX 100

int n, graph[MAX][MAX], selected[MAX];

int minKey(int key[]) {
    int min = INF, min_index;
    for(int v=0; v<n; v++) {
        if(!selected[v] && key[v] < min) {
            min = key[v];
            min_index = v;
        }
    }
    return min_index;
}

void prim() {
    int parent[MAX], key[MAX];
    for(int i=0; i<n; i++) {
        key[i] = INF;
        selected[i] = 0;
    }
    key[0] = 0;
    parent[0] = -1;

    for(int count=0; count<n-1; count++) {
        int u = minKey(key);
        selected[u] = 1;
        for(int v=0; v<n; v++) {
            if(graph[u][v] && !selected[v] && graph[u][v] < key[v]) {
                parent[v] = u;
                key[v] = graph[u][v];
            }
        }
    }

    printf("Edge \tWeight\n");
    for(int i=1; i<n; i++)
        printf("%d - %d \t%d\n", parent[i], i, graph[i][parent[i]]);
}

int main() {
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter adjacency matrix:\n");
    for(int i=0; i<n; i++)
        for(int j=0; j<n; j++)
            scanf("%d", &graph[i][j]);

    prim();
    return 0;
}
